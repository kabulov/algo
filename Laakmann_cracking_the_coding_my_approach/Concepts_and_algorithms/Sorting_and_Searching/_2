
SOLUTION

string sorted_string(const string& s) {
  string ret(s);
  sort(ret.begin(),ret.end());
  return ret;
}

vector<string> sort_special(vector<string>& v) {
	typedef hash_map<string, vector<string> > type;
  type hm;
  for (int i = 0; i < v.size(); ++i) {
    string s = sorted_string(v[i]);
		hm[s].push_back(v[i]);
  }
	vector<string> ret;
	ret.reserve(v.size());
 	for (type::iterator it = hm.begin(); it != hm.end(); ++it){
		vector<string>& lst = it->second;
		for (int i = 0; i < lst.size(); ++i) {
			ret.push_back(lst[i]);
		}
	}
  return ret;
}
