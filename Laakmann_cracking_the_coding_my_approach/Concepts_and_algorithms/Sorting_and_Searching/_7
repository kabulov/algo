
SOLUTION 

i hope i fullfilled strict weak ordering criterion when implementing cmp
if two firsts are equal then sorts so that corresponding seconds are descending
longest increasing subsequence

typedef pair<int, int> pii;

int solve(vector<pii>& v) {
	if (v.size() == 0) {
		return 0;
	}
	class cmp {
	public:
		bool operator()(const pii& lt, const pii& rt) {
			return lt.first < rt.first || (lt.first == rt.first && lt.second > rt.second);
		}
	};
	cmp compare;
	sort(v.begin(), v.end(), compare);
	int ret = 1;
	vector<int> d(v.size(), 0);
	d[0]=1;
	for (int i = 1; i < v.size(); ++i) {
		for (int j = 0; j < i; ++j) {
			if (compare(v[j],v[i])){
				d[i] = max(d[i],d[j]);
			}
		}
		++d[i];
		ret = max(ret, d[i]);
	}
	return ret;
