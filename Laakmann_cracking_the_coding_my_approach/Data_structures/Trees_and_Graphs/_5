
STATEMENT

imlement a function to check if a binary tree is a binary search tree

SOLUTION

questions:

are numbers distinct ?

solution& analysis & design:

one can prove that binary tree is a binary search tree 
iff an array generated by preorder traversal of a tree is sorted (ascending).
so solution is simple dfs
time complexity: O(n), n - amt of nodes
space complexity: O(n), if binary tree is chained like a list

code:

#include <cstdlib>

struct Node {
	int data;
	Node *left, *right;
	Node(int d):data(d), left(NULL), right(NULL){}
};

bool dfs(Node* node, int& last) {
	if (node == NULL) {
		return true;
	}
	bool ret = dfs(node->left, last);
	if (!ret || last > node->data) {
		return false;
	}
	last = node->data;
	ret = dfs(node->right, last);
	return ret;
}

#include <climits>

bool isBST(Node* root) {
	int last = INT_MIN;
	bool ret = dfs(root, last); 
}

mistakes & enhancements:
