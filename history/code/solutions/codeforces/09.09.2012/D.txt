import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.PriorityQueue;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) throws IOException {
		Scanner in = new Scanner(new File("input.txt"));
		PrintWriter out = new  PrintWriter("output.txt");

		int m = in.nextInt();
		int n = in.nextInt();
		
		int[] amt = new int[n];
		Arrays.fill(amt, 0);
		
		int[][] inp = new int[n][3];
		for (int i = 0; i < n; ++i) {
			inp[i][0] = in.nextInt();
			inp[i][1] = in.nextInt();
			inp[i][2] = in.nextInt();
		}
		
		int time = 0;
		PriorityQueue<elem> que = new PriorityQueue<elem>();
		for (int i = 0; i < n; ++i) {
			que.add(new elem(i, inp[i][1], inp[i][0]));
		}
		
		elem buf;
		while (m > 0) {
			buf = que.poll();
			time = buf.time;
			buf.amt--;
			amt[buf.num]++;
			--m;

			if (buf.amt == 0) {
				buf.amt = inp[buf.num][1];
				buf.time += inp[buf.num][0] + inp[buf.num][2];
			} else {
				buf.time += inp[buf.num][0];
			}
			
			que.add(buf);
		}
		
		out.println(time);
		for (int i = 0; i < n; ++i)
			out.print(amt[i] + " ");
		
		out.close();
	}
}

class elem implements Comparable<elem> {
	int num, amt, time;
	
	elem(int n, int a, int tm) {
		num = n;
		amt = a;
		time = tm;
	}

	public int compareTo(elem arg) {
		return time - arg.time;
	}
}