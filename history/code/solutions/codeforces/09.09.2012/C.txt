import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.PriorityQueue;
import java.util.Scanner;


public class Main {
	public static void main(String[] args) throws IOException {
		Scanner in = new Scanner(new File("input.txt"));
		PrintWriter out = new  PrintWriter("output.txt");

		x = in.nextDouble();
		y = in.nextDouble();
		
		n = in.nextInt();
		if (n == 0) {
			x = Math.min(x, y);
			out.println(x / 2 + " " + x / 2 + " " + x / 2);
			
			out.close();
			return;
		}
		
		xv = new double[n];
		yv = new double[n];
		rad = new double[n];
		
		for (int i = 0; i < n; ++i) {
			xv[i] = in.nextDouble();
			yv[i] = in.nextDouble();
			rad[i] = in.nextDouble();
		}
		
		r = new double[n];
		double left, right, mid, eps, deps;
		left = 0;
		right = Math.min(x, y);
		eps = 1e-5; //radius
		deps = 1e-14;
		
		while (right - left > eps) {
			mid = (left + right) / 2;
			for (int i = 0; i < n; ++i) r[i] = rad[i] + mid + deps; //!!!!!!!!!!!!!!
			
			if (offer(mid, mid, x - mid, y - mid))
				left = mid;
			else
				right = mid;
		}
		
		out.println(X + " " + Y + " " + (right + left) / 2);
		out.close();
	}
	
	static double sqr(double a) {
		return a * a;
	}
	
	static boolean d1, d2, d3, d4; 
	static double sideps = 1e-5; //baza rekursii
	
	static boolean offer(double xl, double yl, double xr, double yr) {
		if (xr - xl < sideps && yr - yl < sideps) 
			return false;
		
		boolean c1, c2, c3, c4;
		c1 = c2 = c3 = c4 = true;
		
		for (int i = 0; i < n; ++i) {
			//deps here
			d1 = sqr(xv[i] - xl) + sqr(yv[i] - yl) < sqr(r[i]);
			d2 = sqr(xv[i] - xr) + sqr(yv[i] - yl) < sqr(r[i]);
			d3 = sqr(xv[i] - xr) + sqr(yv[i] - yr) < sqr(r[i]);
			d4 = sqr(xv[i] - xl) + sqr(yv[i] - yr) < sqr(r[i]);
			
			if (d1 && d2 && d3 && d4) return false;
			
			c1 &= !d1;
			c2 &= !d2;
			c3 &= !d3;
			c4 &= !d4;
		}
		
		if (c1) {
			X = xl;
			Y = yl;
		} else
		if (c2) {
			X = xr;
			Y = yl;
		} else
		if (c3) {
			X = xr;
			Y = yr;
		} else
		if (c4) {
			X = xl;
			Y = yr;
		}
		
		if (c1 || c2 || c3 || c4) return true;
		
		return offer(xl, yl, (xl + xr) / 2, (yl + yr) / 2) ||
			   offer((xl + xr) / 2, (yl + yr) / 2, xr, yr) ||
			   offer((xl + xr) / 2, yl, xr, (yl + yr) / 2) ||
			   offer(xl, (yl + yr) / 2, (xl + xr) / 2, yr) ;
	}
	
	static double X, Y;
	static double[] r;
	
	static double x, y;
	static int n;
	static double[] xv, yv, rad;
}
