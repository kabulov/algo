codeforces.ru
I - Командная олимпиада (2011-2012 vkoshp)

ссылка
http://codeforces.ru/gym/100044

условие
 в квадратной таблице найти n элементов в попарно различных строках и столбцах, чтобы сумма была минимальна

решение
 венгерский алгоритм

код

#include <iostream>

using namespace std;

const int maxn = 105;
const int inf = 100000000; 

int n;
int place[2 * maxn];

int table[maxn][maxn];
int u[maxn], v[maxn], p[maxn], way[maxn];
int minv[maxn], used[maxn];


void hungarian() {
    for (int i = 0; i <= n; ++i) {
        p[i] = way[i] = 0;
        u[i] = v[i] = 0;
    }

    for (int i = 1; i <= n; ++i) {
        for (int j = 0; j <= n; ++j) {
            minv[j] = inf;
            used[j] = false;
        }
    
        int j0 = 0;
        p[0] = i;

        do {
            used[j0] = true;
            int i0 = p[j0], delta = inf, j1;
            
            for (int j = 1; j <= n; ++j) 
                if (!used[j]) {
                    int cur = table[i0][j] - u[i0] - v[j];
                    if (cur < minv[j]) minv[j] = cur, way[j] = j0;
                    if (minv[j] < delta) delta = minv[j], j1 = j;
                }

            for (int j = 0; j <= n; ++j)
                if (used[j]) 
                    u[p[j]] += delta, v[j] -= delta;
                else
                    minv[j] -= delta;   

            j0 = j1;
        } while (p[j0] != 0);

        do {
            int j1 = way[j0];
            p[j0] = p[j1];
            j0 = j1;
        } while (j0);
    }

}

int main() {
    
    freopen("teams.in", "r", stdin); 
    freopen("teams.out", "w", stdout); 

    cin >> n;
    for (int i = 1; i <= n + n; ++i) cin >> place[i];

    for (int i = 1; i <= n; ++i) {
        int p1 = 0, p2 = 0;
        for (int j = 1; j <= n + n; ++j) 
            if (place[j] == i) {
                if (p1 == 0) {
                    p1 = j;
                } else {
                    p2 = j;
                }
            }
        
        for (int j = 1; j <= n; ++j) {
            table[i][j] = min(abs(p1 - j) + abs(p2 - j - n), abs(p1 - j - n) + abs(p2 - j));
        }
    }

    hungarian();

    for (int j = 1; j <= n; ++j)
        place[j] = place[j + n] = p[j];

    for (int i = 1; i <= n + n; ++i)
        cout << place[i] << " ";

    return 0;
}